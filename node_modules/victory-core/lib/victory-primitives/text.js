Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _collection = require("../victory-util/collection");

var _collection2 = _interopRequireDefault(_collection);

var _style = require("../victory-util/style");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Text = function (_React$Component) {
  _inherits(Text, _React$Component);

  function Text() {
    _classCallCheck(this, Text);

    return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
  }

  _createClass(Text, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return !_collection2.default.areVictoryPropsEqual(this.props, nextProps);
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          x = _props.x,
          y = _props.y,
          dx = _props.dx,
          dy = _props.dy,
          events = _props.events,
          className = _props.className,
          children = _props.children,
          style = _props.style,
          title = _props.title,
          desc = _props.desc,
          transform = _props.transform;

      return _react2.default.createElement(
        "text",
        _extends({
          className: className, x: x, dx: dx, y: y, dy: dy,
          transform: transform, style: (0, _style.sanitizeSvgStyle)(style)
        }, events),
        title && _react2.default.createElement(
          "title",
          null,
          title
        ),
        desc && _react2.default.createElement(
          "desc",
          null,
          desc
        ),
        children
      );
    }
  }]);

  return Text;
}(_react2.default.Component);

Text.propTypes = {
  children: _propTypes2.default.node,
  className: _propTypes2.default.string,
  desc: _propTypes2.default.string,
  dx: _propTypes2.default.number,
  dy: _propTypes2.default.number,
  events: _propTypes2.default.object,
  style: _propTypes2.default.object,
  title: _propTypes2.default.string,
  transform: _propTypes2.default.string,
  x: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  y: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
};
exports.default = Text;