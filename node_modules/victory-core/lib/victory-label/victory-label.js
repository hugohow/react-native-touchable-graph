Object.defineProperty(exports, "__esModule", {
  value: true
});

var _isEmpty2 = require("lodash/isEmpty");

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var _merge2 = require("lodash/merge");

var _merge3 = _interopRequireDefault(_merge2);

var _assign2 = require("lodash/assign");

var _assign3 = _interopRequireDefault(_assign2);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _victoryPortal = require("../victory-portal/victory-portal");

var _victoryPortal2 = _interopRequireDefault(_victoryPortal);

var _propTypes3 = require("../victory-util/prop-types");

var _propTypes4 = _interopRequireDefault(_propTypes3);

var _helpers = require("../victory-util/helpers");

var _helpers2 = _interopRequireDefault(_helpers);

var _labelHelpers = require("../victory-util/label-helpers");

var _labelHelpers2 = _interopRequireDefault(_labelHelpers);

var _style = require("../victory-util/style");

var _style2 = _interopRequireDefault(_style);

var _log = require("../victory-util/log");

var _log2 = _interopRequireDefault(_log);

var _tspan = require("../victory-primitives/tspan");

var _tspan2 = _interopRequireDefault(_tspan);

var _text = require("../victory-primitives/text");

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultStyles = {
  fill: "#252525",
  fontSize: 14,
  fontFamily: "'Gill Sans', 'Gill Sans MT', 'SerÂ­avek', 'Trebuchet MS', sans-serif",
  stroke: "transparent"
};

var VictoryLabel = function (_React$Component) {
  _inherits(VictoryLabel, _React$Component);

  function VictoryLabel() {
    _classCallCheck(this, VictoryLabel);

    return _possibleConstructorReturn(this, (VictoryLabel.__proto__ || Object.getPrototypeOf(VictoryLabel)).apply(this, arguments));
  }

  _createClass(VictoryLabel, [{
    key: "getPosition",
    value: function getPosition(props, dimension) {
      if (!props.datum) {
        return 0;
      }
      var scaledPoint = _helpers2.default.scalePoint(props, props.datum);
      return scaledPoint[dimension];
    }
  }, {
    key: "getStyle",
    value: function getStyle(props, style) {
      style = style ? (0, _merge3.default)({}, defaultStyles, style) : defaultStyles;
      var datum = props.datum || props.data;
      var baseStyles = _helpers2.default.evaluateStyle(style, datum, props.active);
      return (0, _assign3.default)({}, baseStyles, { fontSize: this.getFontSize(baseStyles) });
    }
  }, {
    key: "getStyles",
    value: function getStyles(props) {
      var _this2 = this;

      return Array.isArray(props.style) && !(0, _isEmpty3.default)(props.style) ? props.style.map(function (style) {
        return _this2.getStyle(props, style);
      }) : [this.getStyle(props, props.style)];
    }
  }, {
    key: "getHeight",
    value: function getHeight(props, type) {
      var datum = props.datum || props.data;
      return _helpers2.default.evaluateProp(props[type], datum, props.active);
    }
  }, {
    key: "getContent",
    value: function getContent(props) {
      if (props.text === undefined || props.text === null) {
        return [" "];
      }
      var datum = props.datum || props.data;
      if (Array.isArray(props.text)) {
        return props.text.map(function (line) {
          return _helpers2.default.evaluateProp(line, datum, props.active);
        });
      }
      var child = _helpers2.default.evaluateProp(props.text, datum, props.active);
      return ("" + child).split("\n");
    }
  }, {
    key: "getDy",
    value: function getDy(props, style, content, lineHeight) {
      //eslint-disable-line max-params
      style = Array.isArray(style) ? style[0] : style;
      lineHeight = this.checkLineHeight(lineHeight, lineHeight[0], 1);
      var fontSize = style.fontSize;
      var datum = props.datum || props.data;
      var dy = props.dy ? _helpers2.default.evaluateProp(props.dy, datum, props.active) : 0;
      var length = content.length;
      var capHeight = this.getHeight(props, "capHeight");
      var verticalAnchor = style.verticalAnchor || props.verticalAnchor;
      var anchor = verticalAnchor ? _helpers2.default.evaluateProp(verticalAnchor, datum) : "middle";
      switch (anchor) {
        case "end":
          return dy + (capHeight / 2 + (0.5 - length) * lineHeight) * fontSize;
        case "middle":
          return dy + (capHeight / 2 + (0.5 - length / 2) * lineHeight) * fontSize;
        default:
          return dy + (capHeight / 2 + lineHeight / 2) * fontSize;
      }
    }
  }, {
    key: "checkLineHeight",
    value: function checkLineHeight(lineHeight, val, fallbackVal) {
      if (Array.isArray(lineHeight)) {
        return (0, _isEmpty3.default)(lineHeight) ? fallbackVal : val;
      }
      return lineHeight;
    }
  }, {
    key: "getTransform",
    value: function getTransform(props, style) {
      var active = props.active,
          datum = props.datum,
          x = props.x,
          y = props.y,
          polar = props.polar;

      var defaultAngle = polar ? _labelHelpers2.default.getPolarAngle(props) : 0;
      var angle = style.angle || props.angle || defaultAngle;
      var transform = props.transform || style.transform;
      var transformPart = transform && _helpers2.default.evaluateProp(transform, datum, active);
      var rotatePart = angle && { rotate: [angle, x, y] };
      return transformPart || angle ? _style2.default.toTransformString(transformPart, rotatePart) : undefined;
    }
  }, {
    key: "getFontSize",
    value: function getFontSize(style) {
      var baseSize = style && style.fontSize;
      if (typeof baseSize === "number") {
        return baseSize;
      } else if (baseSize === undefined || baseSize === null) {
        return defaultStyles.fontSize;
      } else if (typeof baseSize === "string") {
        var fontSize = +baseSize.replace("px", "");
        if (!isNaN(fontSize)) {
          return fontSize;
        } else {
          _log2.default.warn("fontSize should be expressed as a number of pixels");
          return defaultStyles.fontSize;
        }
      }
      return defaultStyles.fontSize;
    }
  }, {
    key: "renderElements",
    value: function renderElements(props) {
      var _this3 = this;

      var datum = props.datum,
          active = props.active,
          inline = props.inline,
          className = props.className,
          title = props.title,
          desc = props.desc,
          events = props.events;

      var style = this.getStyles(props);
      var lineHeight = this.getHeight(props, "lineHeight");
      var textAnchor = props.textAnchor ? _helpers2.default.evaluateProp(props.textAnchor, datum, active) : "start";
      var content = this.getContent(props);
      var dx = props.dx ? _helpers2.default.evaluateProp(props.dx, datum, active) : 0;
      var dy = this.getDy(props, style, content, lineHeight);
      var transform = this.getTransform(props, style);
      var x = typeof props.x !== "undefined" ? props.x : this.getPosition(props, "x");
      var y = typeof props.y !== "undefined" ? props.y : this.getPosition(props, "y");

      var textChildren = content.map(function (line, i) {
        var currentStyle = style[i] || style[0];
        var lastStyle = style[i - 1] || style[0];
        var fontSize = (currentStyle.fontSize + lastStyle.fontSize) / 2;
        var currentLineHeight = _this3.checkLineHeight(lineHeight, (lineHeight[i] + (lineHeight[i - 1] || lineHeight[0])) / 2, 1);

        var tspanProps = {
          key: i,
          x: !inline ? props.x : undefined,
          dx: dx,
          dy: i && !inline ? currentLineHeight * fontSize : undefined,
          textAnchor: currentStyle.textAnchor || textAnchor,
          style: currentStyle,
          content: line
        };
        return _react2.default.cloneElement(props.tspanComponent, tspanProps);
      });
      return _react2.default.cloneElement(props.textComponent, { dx: dx, dy: dy, x: x, y: y, events: events, transform: transform, className: className, title: title, desc: desc }, textChildren);
    }
  }, {
    key: "render",
    value: function render() {
      var label = this.renderElements(this.props);
      return this.props.renderInPortal ? _react2.default.createElement(
        _victoryPortal2.default,
        null,
        label
      ) : label;
    }
  }]);

  return VictoryLabel;
}(_react2.default.Component);

VictoryLabel.displayName = "VictoryLabel";
VictoryLabel.role = "label";
VictoryLabel.propTypes = {
  active: _propTypes2.default.bool,
  angle: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  capHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes4.default.nonNegative, _propTypes2.default.func]),
  className: _propTypes2.default.string,
  data: _propTypes2.default.array,
  datum: _propTypes2.default.any,
  desc: _propTypes2.default.string,
  dx: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.func]),
  dy: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.func]),
  events: _propTypes2.default.object,
  index: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  inline: _propTypes2.default.bool,
  labelPlacement: _propTypes2.default.oneOf(["parallel", "perpendicular", "vertical"]),
  lineHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes4.default.nonNegative, _propTypes2.default.func, _propTypes2.default.array]),
  origin: _propTypes2.default.shape({ x: _propTypes4.default.nonNegative, y: _propTypes4.default.nonNegative }),
  polar: _propTypes2.default.bool,
  renderInPortal: _propTypes2.default.bool,
  scale: _propTypes2.default.shape({ x: _propTypes4.default.scale, y: _propTypes4.default.scale }),
  style: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.array]),
  text: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.func, _propTypes2.default.array]),
  textAnchor: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(["start", "middle", "end", "inherit"]), _propTypes2.default.func]),
  textComponent: _propTypes2.default.element,
  title: _propTypes2.default.string,
  transform: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.func]),
  tspanComponent: _propTypes2.default.element,
  verticalAnchor: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(["start", "middle", "end"]), _propTypes2.default.func]),
  x: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),
  y: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
};
VictoryLabel.defaultProps = {
  textComponent: _react2.default.createElement(_text2.default, null),
  tspanComponent: _react2.default.createElement(_tspan2.default, null),
  capHeight: 0.71, // Magic number from d3.
  lineHeight: 1
};
exports.default = VictoryLabel;