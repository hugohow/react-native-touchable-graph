Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getData = exports.getDomain = exports.getBaseProps = undefined;

var _defaults2 = require("lodash/defaults");

var _defaults3 = _interopRequireDefault(_defaults2);

var _sortBy2 = require("lodash/sortBy");

var _sortBy3 = _interopRequireDefault(_sortBy2);

var _assign2 = require("lodash/assign");

var _assign3 = _interopRequireDefault(_assign2);

var _victoryCore = require("victory-core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var sortData = function (dataset, sortKey) {
  var sortOrder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "ascending";

  if (!sortKey) {
    return dataset;
  }

  if (sortKey === "x" || sortKey === "y") {
    sortKey = "_" + sortKey;
  }

  var sortedData = (0, _sortBy3.default)(dataset, sortKey);

  if (sortOrder === "descending") {
    return sortedData.reverse();
  }

  return sortedData;
};

var getData = function (props) {
  if (!props.data || _victoryCore.Data.getLength(props.data) < 1) {
    return [];
  }
  var stringMap = {
    x: _victoryCore.Data.createStringMap(props, "x")
  };

  var accessor = {
    x: _victoryCore.Helpers.createAccessor(props.x !== undefined ? props.x : "x"),
    open: _victoryCore.Helpers.createAccessor(props.open !== undefined ? props.open : "open"),
    close: _victoryCore.Helpers.createAccessor(props.close !== undefined ? props.close : "close"),
    high: _victoryCore.Helpers.createAccessor(props.high !== undefined ? props.high : "high"),
    low: _victoryCore.Helpers.createAccessor(props.low !== undefined ? props.low : "low")
  };

  var formattedData = props.data.reduce(function (dataArr, datum, index) {
    datum = _victoryCore.Data.parseDatum(datum);

    var evaluatedX = accessor.x(datum);
    var _x = evaluatedX !== undefined ? evaluatedX : index;
    var _open = accessor.open(datum);
    var _close = accessor.close(datum);
    var _high = accessor.high(datum);
    var _low = accessor.low(datum);
    var _y = [_open, _close, _high, _low];

    dataArr.push((0, _assign3.default)({}, datum, { _x: _x, _y: _y, _open: _open, _close: _close, _high: _high, _low: _low }, typeof _x === "string" ? { _x: stringMap.x[_x], x: _x } : {}));

    return dataArr;
  }, []);

  return sortData(formattedData, props.sortKey, props.sortOrder);
};

var getDomain = function (props, axis) {
  var domain = void 0;
  if (props.domain && props.domain[axis]) {
    domain = props.domain[axis];
  } else if (props.domain && Array.isArray(props.domain)) {
    domain = props.domain;
  } else {
    var dataset = getData(props);
    var allData = dataset.reduce(function (memo, datum) {
      return Array.isArray(datum["_" + axis]) ? memo.concat.apply(memo, _toConsumableArray(datum["_" + axis])) : memo.concat(datum["_" + axis]);
    }, []);

    if (allData.length < 1) {
      return _victoryCore.Scale.getBaseScale(props, axis).domain();
    }

    var min = Math.min.apply(Math, _toConsumableArray(allData));
    var max = Math.max.apply(Math, _toConsumableArray(allData));
    if (+min === +max) {
      return _victoryCore.Domain.getSinglePointDomain(max);
    }
    domain = [min, max];
  }
  return _victoryCore.Domain.cleanDomain(_victoryCore.Domain.padDomain(domain, props, axis), props);
};

var getCalculatedValues = function (props) {
  var theme = props.theme,
      polar = props.polar;

  var defaultStyle = theme && theme.candlestick && theme.candlestick.style ? theme.candlestick.style : {};
  var style = _victoryCore.Helpers.getStyles(props.style, defaultStyle);
  var data = _victoryCore.Data.addEventKeys(props, getData(props));
  var range = {
    x: _victoryCore.Helpers.getRange(props, "x"),
    y: _victoryCore.Helpers.getRange(props, "y")
  };
  var domain = {
    x: getDomain(props, "x"),
    y: getDomain(props, "y")
  };
  var scale = {
    x: _victoryCore.Scale.getBaseScale(props, "x").domain(domain.x).range(range.x),
    y: _victoryCore.Scale.getBaseScale(props, "y").domain(domain.y).range(range.y)
  };
  var origin = polar ? props.origin || _victoryCore.Helpers.getPolarOrigin(props) : undefined;
  return { domain: domain, data: data, scale: scale, style: style, origin: origin };
};

var isTransparent = function (attr) {
  return attr === "none" || attr === "transparent";
};

var getDataStyles = function (datum, style, props) {
  style = style || {};
  var candleColor = datum.open > datum.close ? props.candleColors.negative : props.candleColors.positive;
  var fill = datum.fill || style.fill || candleColor;
  var strokeColor = datum.stroke || style.stroke;
  var stroke = isTransparent(strokeColor) ? fill : strokeColor || "black";
  return (0, _defaults3.default)({}, datum, { stroke: stroke, fill: fill }, style);
};

var getLabelProps = function (dataProps, text, style) {
  var x = dataProps.x,
      high = dataProps.high,
      index = dataProps.index,
      scale = dataProps.scale,
      datum = dataProps.datum,
      data = dataProps.data;

  var labelStyle = style.labels || {};
  return {
    style: labelStyle,
    y: high - (labelStyle.padding || 0),
    x: x,
    text: text,
    index: index,
    scale: scale,
    datum: datum,
    data: data,
    textAnchor: labelStyle.textAnchor,
    verticalAnchor: labelStyle.verticalAnchor || "end",
    angle: labelStyle.angle
  };
};

var getBaseProps = function (props, fallbackProps) {
  // eslint-disable-line max-statements
  props = _victoryCore.Helpers.modifyProps(props, fallbackProps, "candlestick");
  var calculatedValues = getCalculatedValues(props);
  var data = calculatedValues.data,
      style = calculatedValues.style,
      scale = calculatedValues.scale,
      domain = calculatedValues.domain,
      origin = calculatedValues.origin;
  var _props = props,
      groupComponent = _props.groupComponent,
      width = _props.width,
      height = _props.height,
      padding = _props.padding,
      standalone = _props.standalone,
      theme = _props.theme,
      polar = _props.polar,
      wickStrokeWidth = _props.wickStrokeWidth;

  var initialChildProps = { parent: {
      domain: domain, scale: scale, width: width, height: height, data: data, standalone: standalone, theme: theme, polar: polar, origin: origin,
      style: style.parent, padding: padding
    } };

  return data.reduce(function (childProps, datum, index) {
    var eventKey = datum.eventKey || index;
    var x = scale.x(datum._x1 !== undefined ? datum._x1 : datum._x);
    var high = scale.y(datum._high);
    var close = scale.y(datum._close);
    var open = scale.y(datum._open);
    var low = scale.y(datum._low);
    var candleHeight = Math.abs(scale.y(datum._open) - scale.y(datum._close));
    var dataStyle = getDataStyles(datum, style.data, props);
    var dataProps = {
      x: x, high: high, low: low, candleHeight: candleHeight, scale: scale, data: data, datum: datum, groupComponent: groupComponent, index: index,
      style: dataStyle, padding: padding, width: width, polar: polar, origin: origin, wickStrokeWidth: wickStrokeWidth, open: open, close: close
    };

    childProps[eventKey] = {
      data: dataProps
    };
    var text = _victoryCore.LabelHelpers.getText(props, datum, index);
    if (text !== undefined && text !== null || props.events || props.sharedEvents) {
      childProps[eventKey].labels = getLabelProps(dataProps, text, style);
    }

    return childProps;
  }, initialChildProps);
};

exports.getBaseProps = getBaseProps;
exports.getDomain = getDomain;
exports.getData = getData;